name: backend

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  [push, pull_request, release, ]

defaults:
  run:
    working-directory: ./php/services

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  run:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['8.0']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: lamoda
          MYSQL_ROOT_PASSWORD: password
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, pdo, pdo_mysql, intl, zip
          coverage: none

      - name: Check PHP Version
        run: php -v

      - name: Check Composer Version
        run: composer -V

      - name: Check PHP Extensions
        run: php -m

      - name: Start MySQL service
        run: sudo systemctl start mysql

      - name: Create test database
        run: mysql -uroot -proot -e 'CREATE DATABASE IF NOT EXISTS lamoda;'

      - name: Install dependencies for PHP 8
        if: matrix.php-versions >= '8.0'
        run: composer update --prefer-dist --no-progress --ignore-platform-reqs

      - name: Copy .env
        run: cp .env.dev .env

      - name: Copy phinx config
        run: cp -rf phinx.dev.json phinx.json

      - name: Run migrate
        run: vendor/bin/phinx migrate

      - name: Run seeders
        run: vendor/bin/phinx seed:run -s UserSeeder -s AccountSeeder -s AccountUserSeeder
